<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.photo.mapper.Vlog_Mapper">
    <select id="getVloges" resultMap="Vlog_Mapper">
       select vl.*,ui.*
    from vlog vl
            left join user_info ui
    on vl.id_unique = ui.id_unique
            order by date DESC,id DESC
    </select>
    <!-- id, 唯一性，注意啦，这个id用于标示这个javabean对象的唯一性， 不一定会是数据库的主键（不要把它理解为数据库对应表的主键）
          property属性对应javabean的属性名，column对应数据库表的列名
          （这样，当javabean的属性与数据库对应表的列名不一致的时候，就能通过指定这个保持正常映射了）
      -->

    <resultMap id="Vlog_Mapper" type="com.example.photo.bean.init.Vlog_Rusult">
        <id property="id" column="id"/>
        <result property="id_unique" column="id_unique"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="vlog_url" column="vlog_url"/>
        <result property="date" column="date"/>
        <result property="likes" column="likes"/>
        <result property="head_url" column="head_url"/>
        <result property="name" column="name"/>

        <!--
        collection定义一个子集合对象返回
        ofType:指定集合里面元素的类型
        property属性设置集合的属性名
        -->
        <collection property="label" ofType="String"
                    select="findlabel"
                    column="id">
            <!--
            id指的是主键,
            column是数据库中的列,可以是别名
            property映射的是实体类中的属性
            result是普通列(非主键)
            -->
        </collection>
    </resultMap>

    <select id="getVlogs_for_id_unique" resultMap="Vlog_Mapper">
       select vl.*,ui.*
    from vlog vl
            left join user_info ui
    on vl.id_unique = ui.id_unique
    where vl.id_unique = #{id_unique}
            order by date DESC,id DESC
    </select>
    <resultMap id="Vlog_for_id_unique_Mapper" type="com.example.photo.bean.init.Vlog_Rusult">
        <id property="id" column="id"/>
        <result property="id_unique" column="id_unique"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="vlog_url" column="vlog_url"/>
        <result property="date" column="date"/>
        <result property="likes" column="likes"/>
        <result property="head_url" column="head_url"/>
        <result property="name" column="name"/>
        <collection property="label" ofType="String"
                    javaType="String" select="findlabel"
                    column="id">
        </collection>
    </resultMap>

    <select id="findlabel" resultType="String">
       select GROUP_CONCAT(vlog_id) from vlog_label u where u.vlog_id = #{id}
    </select>
</mapper>
